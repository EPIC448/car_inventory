 Note on the project / todo. 

  Whole app Car inventory


  --- √ phase1
     set up user with Devise functionality
     This include runing all the needed command

     set up admin on user which will be a boolean
     https://github.com/heartcombo/devise/wiki/How-To:-Add-an-Admin-Role
     option 2: on the link.

    To identify Admin you put any where
     if current_user.admin?
       # do something
    end  

    If the page could potentially not have a current_user set then: 
     if current_user.try(:admin?)
    # do something
   end

   use code to grant Admin access to current user
   current_user.update_attribute :admin, true

---- phase 2  Project layout

  Demo app | my app

  √ users  - user
  √ project(name, description:text, references to users) - dealership(name,address, references to user)  
   √ task(name,description:text status project:references)   - inventory =>  inventory of cars(carmodel,price:integer, status [old or new], dealership:references)

√Set up the inventory for cars.  models,controller, views
√Set up dealership models,controller, views
√ Set up dealership models,controller, views

√Test that we are able to sign up. 

Demo sign-up account - admin
 Emails : bob@example.com
 password: bob123!freshly
 
  Emails : john@example.com
 password: asfasf!123

 -----√ phase 3 

 Give admin the power to add, edit and destory inventory
   For admin, Include the instruction on how to do it in the terminal
    drop into  irb
    and Change user boolean to admin. 
      
      add if 
   <%if current_user && current_user.admin? %>
  //do something
 <%end%>
 
 To change user to Admin in Terminal 

 Cd into you car_inventory file
   use the app by:
  Sign-up or log_ing into a user account.
 
  In the car_inventory terminal

 >> √ use code to grant Admin access to current user

  user and admin video. min 6:40

----- √ phase 4  RECHECK user is working as ADMIN 

     Stop video at 19:53.   have a little issue.
    Edit button is giving me issues.  

  // Put in readme. 
  To change user to Admin in Terminal 
 
  In the car_inventory terminal

    run "rails c"
   then run  "User.first" to make sure you are on the right user. 
  
  It shows
  #<User id: 1, email: "bob@example.com", 
  created_at: "2021-02-12 18:39:27.791451000 +0000", updated_at: "2021-02-12 18:39:27.791451000 +0000", admin: false> 
 
  use code to grant Admin access to current user
  run "@user = @user.admin = true "
  run "@user.admin = true"
  run "@user.save"
  ------  or 
  current_user.update_attribute :admin, true

---- √ phase 5  Install and Rails Rubocup

    ultimate sources rubocop  https://docs.rubocop.org/rubocop/1.0/cops_style.html#styledocumentation
    https://github.com/rubocop-hq/rubocop-rails
    https://github.com/rubocop-hq/rubocop
 exclude certain files
 https://docs.rubocop.org/rubocop/configuration.html#includingexcluding-files   

    / √ need a little configuration. 
    Readme:  When we run "rubocop add --force-exclusion"
     It help rubocop omit files saved in .rubocop.yml
  Readme:  Todo: Add all the comments as needed. 
  Then, explain how to run rubocop in exclude certain files.
  MAke sure to CD into the correct file 

---- √ Phase 6 Install rspec--
     
      TDD testing  for inventory cars
      If we are using rspec on project we build  already.
       https://semaphoreci.com/community/tutorials/how-to-test-rails-models-with-rspec

  ReadMe: Rails comes with it our natural test enviorments

     put rspec in the gemfile
    run "bundle Install" 
     run "rails generate rspec:install"
      
      To run rspec 
       run bundle exec rspec

      Generate test files with rspec. 
      https://relishapp.com/rspec/rspec-rails/docs/generators

      rspec contoroller
      https://relishapp.com/rspec/rspec-rails/v/4-0/docs/controller-specshttps://relishapp.com/rspec/rspec-rails/v/4-0/docs/controller-specs



---  Phase 7 Price change -%20 at end of every month -
Get the end of the month
https://stackoverflow.com/questions/14120661/get-last-day-of-the-month-in-ruby
Created in the dealership model.
 Now we need to use it in our Show page with the prices.
  In video Project. See how 
  percent_complete was used in the Project model and inside the project 
    minutes: 49:10, or 1:03:05

For my project. end_of_month in dealership model
 Get the last of the month === https://www.rubyguides.com/2015/12/ruby-time/

 Note: 
#   Price reduce by 2% every month. start at 100
# month1 price = 100 -2% = 98
# month2 price     = 98 - 2% = 96.04
# month3 price     = 96.04 - 2% = 94.472
#  (inventory price = inventory price - 2%) ^ time  (2ˆ4) =16 
(1x2) =2
(2x2) =4
(4x2)=8
(8x2)= 16

Then, Remove the logic from the Views. and models. will still be
 inventory.price

      https://www.geeksforgeeks.org/ruby-date-and-time/

  Readme: 
   I just put in directly inside the views files for dealership and inventory

  
---- √ phase 8 Sign-out button... Look at devise files 
√Move the sign-out button. so be where we can use it all the time.
 Look back onto Your rails video

----- √ phase 9 Deploy to Heroku------- 
https://devcenter.heroku.com/articles/getting-started-with-ruby#deploy-the-app
After following steps in the Heroku link above
run git remote  Heroku
run git push --set-upstream heroku master 
run git push heroku

---if you face issues.
run 'heroku logs'   to see where the issue are
run 'heroku run rake db:migrate'    to create migration in Heroku

To push changes into Heroku you 
run 'git push -am "README updated to include Deployment for Heroku"
run "git push heroku master " 

---- all user can see inventory of cars. 


-----  Issues with Server
When you get A server is already running.
 Check /Users/omoogun/Desktop/Flatiron_Dev_files/ruby/car_inventory/car_inventory/tmp/pids/server.pid.

kill -9 /Users/omoogun/Desktop/Flatiron_Dev_files/ruby/car_inventory/car_inventory/tmp/pids/server.pid